from typing import *
from numpy import ndarray
from io import BytesIO

face_detector: Any
predictor_68_point_model: Any
pose_predictor_68_point: Any
predictor_5_point_model: Any
pose_predictor_5_point: Any
cnn_face_detection_model: Any
cnn_face_detector: Any
face_recognition_model: Any
face_encoder: Any

def face_distance(face_encodings: List[ndarray], face_to_compare: ndarray) -> ndarray: ...
def load_image_file(file: str | BytesIO, mode: str = ...) -> ndarray: ...
def face_locations(img: ndarray, number_of_times_to_upsample: int = ..., model: str = ...) -> List[Tuple[int, int, int, int]]: ...
def batch_face_locations(images: List[ndarray], number_of_times_to_upsample: int = ..., batch_size: int = ...) -> List[Tuple[int, Any, Any, int]]: ...
def face_landmarks(face_image: ndarray, face_locations: Any | None = ..., model: str = ...) -> List[Dict[str, List[Tuple[Any, ...]]]]: ...
def face_encodings(face_image: ndarray, known_face_locations: Any | None = ..., num_jitters: int = ..., model: str = ...) -> List[ndarray]: ...
def compare_faces(known_face_encodings: List[ndarray], face_encoding_to_check: ndarray, tolerance: float = ...) -> List[bool]: ...
